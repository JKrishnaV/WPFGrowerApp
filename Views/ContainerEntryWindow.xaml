<Window x:Class="WPFGrowerApp.Views.ContainerEntryWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:WPFGrowerApp.Converters"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="500" Width="550"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    </Window.Resources>

    <Border Background="White" 
            CornerRadius="15" 
            BorderBrush="#DDDDDD" 
            BorderThickness="1">
        <Border.Effect>
            <DropShadowEffect Color="Black" 
                            Opacity="0.3" 
                            ShadowDepth="3" 
                            BlurRadius="15"/>
        </Border.Effect>
        
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,20">
                <materialDesign:PackIcon Kind="Package" 
                                       Width="32" Height="32" 
                                       VerticalAlignment="Center"
                                       Margin="0,0,10,0"/>
                <TextBlock Text="{Binding WindowTitle}" 
                         Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                         VerticalAlignment="Center"/>
            </StackPanel>

            <!-- Form Fields -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- Container ID -->
                    <TextBox Text="{Binding ContainerId, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                           materialDesign:HintAssist.Hint="Container ID *"
                           materialDesign:HintAssist.HelperText="Enter a number between 1 and 20 (Required)"
                           Style="{StaticResource MaterialDesignOutlinedTextBox}"
                           IsReadOnly="{Binding IsContainerIdReadOnly}"
                           Margin="0,0,0,15"
                           ToolTip="Container ID (1-20). Cannot be changed after creation."/>

                    <!-- Description -->
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                           materialDesign:HintAssist.Hint="Description *"
                           materialDesign:HintAssist.HelperText="Example: 'Partition Plastic Flat' or 'Blueberry Lugs' (Required)"
                           Style="{StaticResource MaterialDesignOutlinedTextBox}"
                           MaxLength="30"
                           Margin="0,0,0,15"
                           ToolTip="Full description of the container type (max 30 characters)"/>

                    <!-- Short Code -->
                    <TextBox Text="{Binding ShortCode, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                           materialDesign:HintAssist.Hint="Short Code *"
                           materialDesign:HintAssist.HelperText="Used in reports. Example: 'PPFL', 'BBL', 'GHL' (Required)"
                           Style="{StaticResource MaterialDesignOutlinedTextBox}"
                           MaxLength="6"
                           CharacterCasing="Upper"
                           Margin="0,0,0,15"
                           ToolTip="Short code for reports (max 6 characters, uppercase)"/>

                    <!-- Tare Weight -->
                    <TextBox Text="{Binding TareWeight, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                           materialDesign:HintAssist.Hint="Tare Weight"
                           materialDesign:HintAssist.HelperText="For information only. Actual weight calculations done at scale."
                           Style="{StaticResource MaterialDesignOutlinedTextBox}"
                           Margin="0,0,0,15"
                           ToolTip="Tare weight of container (informational only)"/>

                    <!-- Value -->
                    <TextBox Text="{Binding Value, StringFormat='F2', UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                           materialDesign:HintAssist.Hint="Container Value"
                           materialDesign:HintAssist.HelperText="Dollar value/deposit for this container. Used in payment calculations."
                           Style="{StaticResource MaterialDesignOutlinedTextBox}"
                           Margin="0,0,0,15"
                           ToolTip="Deposit/value amount for this container type"/>

                    <!-- In Use Checkbox -->
                    <CheckBox IsChecked="{Binding InUse}"
                            Content="Container Type is Active"
                            Margin="0,5,0,15"
                            ToolTip="Only active containers can be used in receipt entry">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                <Setter Property="Foreground" Value="Black"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Foreground" Value="Green"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Foreground" Value="OrangeRed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>

                    <!-- Info Panel -->
                    <materialDesign:Card Background="#E3F2FD" Padding="15" Margin="0,10,0,0">
                        <StackPanel>
                            <TextBlock Text="ℹ️ Container Type Guidelines:" 
                                     FontWeight="SemiBold"
                                     Margin="0,0,0,5"/>
                            <TextBlock TextWrapping="Wrap" FontSize="12" Opacity="0.8">
                                • Container IDs 1-20 map to fields IN1-IN20 and OUT1-OUT20 in receipts<LineBreak/>
                                • Short codes should be unique and memorable (e.g., PPFL, BBL)<LineBreak/>
                                • Tare weight is informational; scale does actual calculations<LineBreak/>
                                • Container value affects grower payment calculations<LineBreak/>
                                • Mark inactive to hide from receipt entry without deleting
                            </TextBlock>
                        </StackPanel>
                    </materialDesign:Card>
                </StackPanel>
            </ScrollViewer>

            <!-- Action Buttons -->
            <StackPanel Grid.Row="2" 
                      Orientation="Horizontal" 
                      HorizontalAlignment="Right"
                      Margin="0,20,0,0">
                <Button Command="{Binding SaveCommand}"
                      Style="{StaticResource MaterialDesignRaisedButton}"
                      IsDefault="True"
                      Margin="0,0,10,0"
                      Width="100">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ContentSave" 
                                                   VerticalAlignment="Center"
                                                   Margin="0,0,5,0"
                                                   Visibility="{Binding IsSaving, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                       Width="16" Height="16"
                                       Margin="0,0,5,0"
                                       Visibility="{Binding IsSaving, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBlock Text="Save" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button Command="{Binding CancelCommand}"
                      Style="{StaticResource MaterialDesignOutlinedButton}"
                      IsCancel="True"
                      Width="100">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Cancel" 
                                                   VerticalAlignment="Center"
                                                   Margin="0,0,5,0"/>
                            <TextBlock Text="Cancel" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</Window>
